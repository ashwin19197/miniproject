 import tensorflow as tf
 from tensorflow.keras.applications import VGG16 
 from tensorflow.keras.datasets import cifar10  
from tensorflow.keras.utils import to_categorical  
from tensorflow.keras.models import Sequential  
from tensorflow.keras.layers import Dense, Flatten, Dropout 
 from tensorflow.keras.optimizers import Adam 
(x_train, y_train), (x_test, y_test) = cifar10.load_data()  
x_train = x_train / 255.0  
x_test = x_test / 255.0 
y_train = to_categorical(y_train, num_classes=10) 
 y_test = to_categorical(y_test, num_classes=10) 
base_model = VGG16(weights='imagenet', include_top=False, input_shape=(32, 32, 3)) 
model = Sequential() 

 model.add(base_model) 

 model.add(Flatten())  

model.add(Dense(256, activation='relu'))  

model.add(Dropout(0.5))  

model.add(Dense(10, activation='softmax'))  

# 10 classes for CIFAR-10 # Compile the model  

learning_rate = 1e-4
optimizer = Adam(learning_rate=learning_rate)
model.compile(optimizer=optimizer, loss='categorical_crossentropy', metrics=['accuracy'])


# Train the model 
model.fit(x_train, y_train, batch_size=64, epochs=10, validation_split=0.2)  

# Evaluate the model on the test set 
test_loss, test_acc = model.evaluate(x_test, y_test) 
print(f'Test accuracy: {test_acc}') 

model_save_path = '/home/sahyadri/oi.h5' 
# Save the trained model to the specified path 
model.save(model_save_path)ve(model_save

from tensorflow.keras.preprocessing import image 
import numpy as np
from tensorflow.keras.preprocessing import image 
import numpy as np
image=keras.preprocessing.image.load_img('/home/sahyadri/tiger.jpeg',target_size=(32, 32))
image_array=keras.preprocessing.image.img_to_array(image)
normalized_image=image_array/255.0
import matplotlib.pyplot as plt
plt.imshow(normalized_image) 
plt.title("Normalized Image") 
plt.show()
predictions=loaded_model.predict(np.expand_dims(normalized_image, axis=0))



